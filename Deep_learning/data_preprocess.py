import pandas as pd
from sklearn.model_selection import train_test_split


TRAIN_PATH = '../Data/train.csv'
TEST_PATH = '../Data/test.csv'

dtypes = {
        'MachineIdentifier':                                    'category',
        'ProductName':                                          'category',
        'EngineVersion':                                        'category',
        'RtpStateBitfield':                                     'float16',
        'IsSxsPassiveMode':                                     'int8',
        'AVProductsInstalled':                                  'float16',
        'AVProductsEnabled':                                    'float16',
        'OrganizationIdentifier':                               'float16',
        'Platform':                                             'category',
        'Processor':                                            'category',
        'OsVer':                                                'category',
        'OsSuite':                                              'int16',
        'OsPlatformSubRelease':                                 'category',
        'SkuEdition':                                           'category',
        'IsProtected':                                          'float16',
        'SmartScreen':                                          'category',
        'UacLuaenable':                                         'float32',
        'Census_MDC2FormFactor':                                'category',
        'Census_DeviceFamily':                                  'category',
        'Census_ProcessorCoreCount':                            'float16',
        'Census_ProcessorManufacturerIdentifier':               'float16',
        'Census_PrimaryDiskTypeName':                           'category',
        'Census_SystemVolumeTotalCapacity':                     'float32',
        'Census_TotalPhysicalRAM':                              'float32',
        'Census_ChassisTypeName':                               'category',
        'Census_InternalPrimaryDiagonalDisplaySizeInInches':    'float16',
        'Census_InternalPrimaryDisplayResolutionVertical':      'float16',
        'Census_PowerPlatformRoleName':                         'category',
        'Census_OSArchitecture':                                'category',
        'Census_OSBranch':                                      'category',
        'Census_OSEdition':                                     'category',
        'Census_OSSkuName':                                     'category',
        'Census_OSInstallTypeName':                             'category',
        'Census_OSInstallLanguageIdentifier':                   'float16',
        'Census_OSWUAutoUpdateOptionsName':                     'category',
        'Census_GenuineStateName':                              'category',
        'Census_ActivationChannel':                             'category',
        'Census_FlightRing':                                    'category',
        'Census_IsVirtualDevice':                               'float16',
        'Census_IsTouchEnabled':                                'int8',
        'Census_IsAlwaysOnAlwaysConnectedCapable':              'float16',
        'Wdft_IsGamer':                                         'float16',
        'Wdft_RegionIdentifier':                                'float16',
        'HasDetections':                                        'int8'
        }

label = ['HasDetections']

ids = ['MachineIdentifier']

numerical_features = ['AVProductsEnabled', 'AVProductsInstalled', 'Census_InternalPrimaryDiagonalDisplaySizeInInches',
                       'Census_InternalPrimaryDisplayResolutionVertical', 'Census_ProcessorCoreCount',
                       'Census_SystemVolumeTotalCapacity', 'Census_TotalPhysicalRAM', 'RtpStateBitfield']

binary_features = ['Census_IsAlwaysOnAlwaysConnectedCapable', 'Census_IsTouchEnabled', 'Census_IsVirtualDevice',
                   'IsProtected', 'IsSxsPassiveMode', 'Wdft_IsGamer']

low_cardinality_features = ['Census_ActivationChannel', 'Census_ChassisTypeName', 'Census_DeviceFamily',
                           'Census_FlightRing', 'Census_GenuineStateName', 'Census_MDC2FormFactor',
                           'Census_OSArchitecture', 'Census_OSBranch', 'Census_OSEdition',
                           'Census_OSInstallLanguageIdentifier', 'Census_OSInstallTypeName',
                           'Census_OSSkuName', 'Census_OSWUAutoUpdateOptionsName',
                           'Census_PowerPlatformRoleName', 'Census_PrimaryDiskTypeName',
                           'Census_ProcessorManufacturerIdentifier', 'EngineVersion',
                           'OrganizationIdentifier', 'OsPlatformSubRelease', 'OsSuite',
                           'OsVer', 'Platform', 'Processor', 'ProductName', 'SkuEdition',
                           'SmartScreen', 'UacLuaenable', 'Wdft_RegionIdentifier']

use_columns = label + numerical_features
# use_columns = label + numerical_features + binary_features + low_cardinality_features

train = pd.read_csv(TRAIN_PATH, dtype=dtypes, usecols=use_columns, low_memory=True)
train.dropna(inplace=True)
X_train, X_val = train_test_split(train, test_size=0.2, random_state=1)
X_train.to_csv('../Data/train_numerical.csv', index=False, header=False)
X_val.to_csv('../Data/val_numerical.csv', index=False, header=False)

test = pd.read_csv(TEST_PATH, dtype=dtypes, usecols=numerical_features, low_memory=True)
test.to_csv('../Data/test_numerical.csv', index=False)
